[{"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/index.tsx":"1","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/App.tsx":"2","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/locales/i18n.ts":"3","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/store/index.ts":"4","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Header/react-material-ui-dark-mode/index.tsx":"5","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/services/index.ts":"6","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/store/rootReducers.ts":"7","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/selectors/auth.selector.ts":"8","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/selectors/app.selector.ts":"9","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/services/httpRequest.ts":"10","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/services/initRequest.ts":"11","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/services/authService.ts":"12","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/reducers/app.reducer.ts":"13","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/reducers/trello.reducer.ts":"14","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/reducers/food.reducer.ts":"15","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/reducers/auth.reducer.ts":"16","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/reducers/user.reducer.ts":"17","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/guards/AuthGuard/index.ts":"18","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/guards/GuestGuard/index.ts":"19","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Login/index.ts":"20","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Register/index.ts":"21","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/layouts/Dashboard/index.ts":"22","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/actions/food.action.ts":"23","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/actions/app.action.ts":"24","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/actions/auth.action.ts":"25","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/actions/user.action.ts":"26","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/layouts/Dashboard/Dashboard.tsx":"27","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/guards/AuthGuard/AuthGuard.tsx":"28","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Login/Login.tsx":"29","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/guards/GuestGuard/GuestGuard.tsx":"30","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Register/Register.tsx":"31","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/actions/trello.action.ts":"32","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Login/style.ts":"33","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Register/style.ts":"34","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/routes.ts":"35","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Header/index.ts":"36","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Dialog/index.ts":"37","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/NavBar/index.ts":"38","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/containers/Auth/index.ts":"39","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/containers/ErrorBoundary/index.ts":"40","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Header/Header.tsx":"41","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/NavBar/NavBar.tsx":"42","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Dialog/Dialog.tsx":"43","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/containers/ErrorBoundary/ErrorBoundary.tsx":"44","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Trello/index.ts":"45","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Header/style.ts":"46","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/FoodDetail/index.ts":"47","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Foods/index.ts":"48","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Home/index.ts":"49","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/NavBar/style.ts":"50","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Header/DarkMode.tsx":"51","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/selectors/food.selector.ts":"52","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/FoodDetail/FoodDetail.tsx":"53","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Foods/Foods.tsx":"54","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Home/Home.tsx":"55","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/apis/food.api.ts":"56","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/hooks/usePagination.ts":"57","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/ReCharts/BarChart.tsx":"58","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Trello/Trello.tsx":"59","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/PaginationBase/index.ts":"60","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Trello/TodoCreate.tsx":"61","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Trello/TodoList.tsx":"62","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Header/Language.tsx":"63","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Header/Account.tsx":"64","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/containers/Auth/Auth.tsx":"65","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/PaginationBase/PaginationBase.tsx":"66","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/selectors/trello.selector.ts":"67","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Trello/TodoForm.tsx":"68","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Trello/TodoCard.tsx":"69","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/PaginationBase/styles.ts":"70","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/selectors/user.selector.ts":"71","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/configs/index.ts":"72","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/apis/user.api.ts":"73"},{"size":1019,"mtime":1626746650052,"results":"74","hashOfConfig":"75"},{"size":1500,"mtime":1626749316202,"results":"76","hashOfConfig":"75"},{"size":630,"mtime":1626756230580,"results":"77","hashOfConfig":"75"},{"size":304,"mtime":1626746650059,"results":"78","hashOfConfig":"75"},{"size":1548,"mtime":1626745520434,"results":"79","hashOfConfig":"75"},{"size":167,"mtime":1626746650058,"results":"80","hashOfConfig":"75"},{"size":476,"mtime":1626746650059,"results":"81","hashOfConfig":"75"},{"size":208,"mtime":1626746650057,"results":"82","hashOfConfig":"75"},{"size":298,"mtime":1626746650057,"results":"83","hashOfConfig":"75"},{"size":577,"mtime":1626746650058,"results":"84","hashOfConfig":"75"},{"size":1682,"mtime":1626746650058,"results":"85","hashOfConfig":"75"},{"size":860,"mtime":1626762062698,"results":"86","hashOfConfig":"75"},{"size":908,"mtime":1626746650055,"results":"87","hashOfConfig":"75"},{"size":4152,"mtime":1626754095011,"results":"88","hashOfConfig":"75"},{"size":1123,"mtime":1626746650055,"results":"89","hashOfConfig":"75"},{"size":579,"mtime":1626746650055,"results":"90","hashOfConfig":"75"},{"size":591,"mtime":1626746650056,"results":"91","hashOfConfig":"75"},{"size":37,"mtime":1626746650051,"results":"92","hashOfConfig":"75"},{"size":38,"mtime":1626746650052,"results":"93","hashOfConfig":"75"},{"size":42,"mtime":1626750685618,"results":"94","hashOfConfig":"75"},{"size":37,"mtime":1626745520442,"results":"95","hashOfConfig":"75"},{"size":38,"mtime":1626745520448,"results":"96","hashOfConfig":"75"},{"size":3207,"mtime":1626746650038,"results":"97","hashOfConfig":"75"},{"size":610,"mtime":1626746650038,"results":"98","hashOfConfig":"75"},{"size":1299,"mtime":1626794074068,"results":"99","hashOfConfig":"75"},{"size":1570,"mtime":1626761501677,"results":"100","hashOfConfig":"75"},{"size":1181,"mtime":1626746650053,"results":"101","hashOfConfig":"75"},{"size":383,"mtime":1626755763408,"results":"102","hashOfConfig":"75"},{"size":6061,"mtime":1626750531733,"results":"103","hashOfConfig":"75"},{"size":365,"mtime":1626746650051,"results":"104","hashOfConfig":"75"},{"size":10782,"mtime":1626752365663,"results":"105","hashOfConfig":"75"},{"size":834,"mtime":1626746650038,"results":"106","hashOfConfig":"75"},{"size":1020,"mtime":1626750763728,"results":"107","hashOfConfig":"75"},{"size":1317,"mtime":1626752423010,"results":"108","hashOfConfig":"75"},{"size":645,"mtime":1626749116259,"results":"109","hashOfConfig":"75"},{"size":35,"mtime":1626745520434,"results":"110","hashOfConfig":"75"},{"size":34,"mtime":1626746650039,"results":"111","hashOfConfig":"75"},{"size":35,"mtime":1626745520434,"results":"112","hashOfConfig":"75"},{"size":33,"mtime":1626746650044,"results":"113","hashOfConfig":"75"},{"size":42,"mtime":1626746650045,"results":"114","hashOfConfig":"75"},{"size":1674,"mtime":1626746650041,"results":"115","hashOfConfig":"75"},{"size":2585,"mtime":1626749210333,"results":"116","hashOfConfig":"75"},{"size":1961,"mtime":1626746650039,"results":"117","hashOfConfig":"75"},{"size":2301,"mtime":1626746650044,"results":"118","hashOfConfig":"75"},{"size":35,"mtime":1626746650051,"results":"119","hashOfConfig":"75"},{"size":1685,"mtime":1626746650041,"results":"120","hashOfConfig":"75"},{"size":40,"mtime":1626746650046,"results":"121","hashOfConfig":"75"},{"size":35,"mtime":1626746650047,"results":"122","hashOfConfig":"75"},{"size":33,"mtime":1626745520439,"results":"123","hashOfConfig":"75"},{"size":488,"mtime":1626745520435,"results":"124","hashOfConfig":"75"},{"size":841,"mtime":1626746650040,"results":"125","hashOfConfig":"75"},{"size":531,"mtime":1626746650057,"results":"126","hashOfConfig":"75"},{"size":2911,"mtime":1626794077489,"results":"127","hashOfConfig":"75"},{"size":4403,"mtime":1626746650046,"results":"128","hashOfConfig":"75"},{"size":532,"mtime":1626759408230,"results":"129","hashOfConfig":"75"},{"size":142,"mtime":1626746650039,"results":"130","hashOfConfig":"75"},{"size":443,"mtime":1626746650052,"results":"131","hashOfConfig":"75"},{"size":1153,"mtime":1626746650043,"results":"132","hashOfConfig":"75"},{"size":2449,"mtime":1626794107545,"results":"133","hashOfConfig":"75"},{"size":44,"mtime":1626746650042,"results":"134","hashOfConfig":"75"},{"size":1609,"mtime":1626746650050,"results":"135","hashOfConfig":"75"},{"size":3442,"mtime":1626746650050,"results":"136","hashOfConfig":"75"},{"size":1962,"mtime":1626746650041,"results":"137","hashOfConfig":"75"},{"size":2083,"mtime":1626793587161,"results":"138","hashOfConfig":"75"},{"size":826,"mtime":1626746650044,"results":"139","hashOfConfig":"75"},{"size":2773,"mtime":1626757189345,"results":"140","hashOfConfig":"75"},{"size":435,"mtime":1626746650057,"results":"141","hashOfConfig":"75"},{"size":983,"mtime":1626746650050,"results":"142","hashOfConfig":"75"},{"size":2638,"mtime":1626746650049,"results":"143","hashOfConfig":"75"},{"size":737,"mtime":1626746650042,"results":"144","hashOfConfig":"75"},{"size":207,"mtime":1626746650058,"results":"145","hashOfConfig":"75"},{"size":129,"mtime":1626746650043,"results":"146","hashOfConfig":"75"},{"size":166,"mtime":1626746650039,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"1i4u6n4",{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"150"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"150"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"150"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"150"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"150"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"150"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"150"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/index.tsx",[],["302","303"],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/App.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/locales/i18n.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/store/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Header/react-material-ui-dark-mode/index.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/services/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/store/rootReducers.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/selectors/auth.selector.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/selectors/app.selector.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/services/httpRequest.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/services/initRequest.ts",["304"],"import axios, { AxiosRequestConfig, AxiosError } from 'axios';\n\n// actions\nimport { actSetLoading, actSetDialog } from 'actions/app.action';\n\nexport type IConfig = AxiosRequestConfig & {\n  showSpinner?: boolean;\n};\n\ntype IAxiosResponse = AxiosError & {\n  config: {\n    showSpinner?: boolean;\n  };\n};\n\nconst requestConfig: IConfig = {\n  baseURL: process.env.REACT_APP_ENDPOINT_URL,\n  timeout: 5000,\n  showSpinner: false,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nexport const axiosInstance = axios.create(requestConfig);\n\nexport default function initRequest(store: any) {\n  let requestCount = 0;\n\n  function decreaseRequestCount() {\n    requestCount -= 1;\n    if (requestCount === 0) {\n      store.dispatch(actSetLoading(false));\n    }\n  }\n\n  axiosInstance.interceptors.request.use(\n    (config: IConfig) => {\n      if (config.showSpinner) {\n        requestCount += 1;\n        store.dispatch(actSetLoading(true));\n      }\n      return config;\n    },\n    (error: IAxiosResponse) => {\n      if (error.config.showSpinner) {\n        decreaseRequestCount();\n      }\n      return Promise.reject(error);\n    },\n  );\n\n  axiosInstance.interceptors.response.use(\n    (res: any) => {\n      if (res.config.showSpinner) {\n        decreaseRequestCount();\n      }\n      return res;\n    },\n    (error: IAxiosResponse) => {\n      if (error && error.config.showSpinner) {\n        decreaseRequestCount();\n        store.dispatch(actSetLoading(true));\n      }\n\n      switch (error.response?.status) {\n        case 404: {\n          break\n        }\n        default:\n          return Promise.reject(error);\n      }\n      return Promise.reject(error);\n    },\n  );\n}","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/services/authService.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/reducers/app.reducer.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/reducers/trello.reducer.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/reducers/food.reducer.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/reducers/auth.reducer.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/reducers/user.reducer.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/guards/AuthGuard/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/guards/GuestGuard/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Login/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Register/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/layouts/Dashboard/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/actions/food.action.ts",["305"],"import { Dispatch } from 'redux'\n\nimport { httpRequest } from 'services';\n\nimport { IPaginaition } from 'models/IPagination'\n\nconst nameSpace = 'food:';\n\nexport const FETCH_ALL_DATA_FOODS = `${nameSpace}FETCH_ALL_DATA_FOODS`\nexport const GET_FOOD_DETAIL_BY_ID = `${nameSpace}GET_FOOD_DETAIL_BY_ID`\nexport const GET_NEW_DATA_FOOD_UPDATE = `${nameSpace}GET_NEW_DATA_FOOD_UPDATE`\nexport const UPDATE_FOOD_DETAIL = `${nameSpace}UPDATE_FOOD_DETAIL`\n\ntype FOODS = {\n  foods: any\n}\ntype FOOD = {\n  food: any,\n}\ntype UPDATE_FOOD = {\n  food: any,\n  id: number\n}\n\n\n// food update \nexport const actNewFoodDataUpdate = (id: number, data: any) => ({\n  type: GET_NEW_DATA_FOOD_UPDATE,\n  payload: {\n    data,\n    id\n  }\n})\n\n// get all foods\nexport const actFetchFoodData = ({ foods }: FOODS) => {\n  return {\n    type: FETCH_ALL_DATA_FOODS,\n    payload: foods\n  }\n}\n\nexport const asyncFetchFoodData = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await httpRequest.get(`/foods`);\n      if (response.data.length === 0) {\n        return {\n          ok: false,\n          res: 'Food not found'\n        }\n      }\n      const foods = response.data;\n      dispatch(actFetchFoodData({ foods }))\n      return {\n        ok: true,\n        res: foods\n      }\n    } catch (err) {\n      return { ok: false, res: \"Error. Please try again..\" }\n    }\n  }\n}\n\n\n// get food detail by id \nexport const actGetFoodDetailData = ({ food }: FOOD) => ({\n  type: GET_FOOD_DETAIL_BY_ID,\n  payload: food\n})\nexport const asyncFetchFoodDetailData = (id: string) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await httpRequest.get(`/foods?id=${id}`);\n      if (response.data.length === 0) {\n        return {\n          ok: false,\n          res: 'Food not found'\n        }\n      }\n      const food = response.data;\n      dispatch(actGetFoodDetailData({ food }))\n      return {\n        ok: true,\n        res: food\n      }\n    } catch (err) {\n      return { ok: false, res: \"Error. Please try again..\" }\n    }\n  }\n}\n\n\n// update food \nexport const actUpdateFood = ({ id, food }: UPDATE_FOOD) => ({\n  type: UPDATE_FOOD_DETAIL,\n  payload: {\n    food,\n    id\n  }\n})\n\nexport const asyncUpdateFood = (id: number, newFood: any) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await httpRequest.put(`/foods/${id}`, newFood);\n      if (response.data.length === 0) {\n        return {\n          ok: false,\n          res: 'Food not found'\n        }\n      }\n      const food = response.data;\n      dispatch(actUpdateFood({ id, food }))\n      return {\n        ok: true,\n        res: food\n      }\n    }\n    catch (err) {\n      return { ok: false, res: \"Error. Please try again..\" }\n    }\n  }\n}\n\n\n\nexport const fetchFoods = async (page: number, perPage: number, q: string) => {\n  try {\n    const response = await httpRequest.get(`/foods?_page=${page}&_limit=${perPage}&q=${q}`, {\n      showSpinner: true\n    });\n\n    if (response.data.length === 0) {\n      return {\n        ok: false,\n        data: 'Food not found'\n      }\n    }\n\n    return {\n      ok: true,\n      data: response.data\n    }\n  } catch (err) {\n    return { ok: false, data: \"Error. Please try again..\" }\n  }\n}\n","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/actions/app.action.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/actions/auth.action.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/actions/user.action.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/layouts/Dashboard/Dashboard.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/guards/AuthGuard/AuthGuard.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Login/Login.tsx",["306","307","308","309","310"],"import React, { useState } from 'react'\nimport {\n  Grid,\n  TextField,\n  Button,\n} from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\n// redux \nimport { useDispatch } from 'react-redux'\nimport { asyncHandleLogin } from 'actions/auth.action'\nimport { useToasts } from 'react-toast-notifications'\nimport { useHistory, Link } from 'react-router-dom'\n\n\nimport { Formik, Form, FormikProps } from 'formik'\nimport * as Yup from 'yup'\n\nimport useStyles from './style'\n\nimport { actLoginSuccess } from 'actions/auth.action';\n\nimport { authService } from 'services';\n\ninterface ISignUpForm {\n  email: string,\n}\n\n\ninterface IFormStatus {\n  message: string\n  type: string\n}\n\ninterface IFormStatusProps {\n  [key: string]: IFormStatus\n}\n\nconst formStatusProps: IFormStatusProps = {\n  success: {\n    message: 'Signed up successfully.',\n    type: 'success',\n  },\n  duplicate: {\n    message: 'Email-id already exist. Please use different email-id.',\n    type: 'error',\n  },\n  error: {\n    message: 'Something went wrong. Please try again.',\n    type: 'error',\n  },\n}\nconst Login: React.FunctionComponent = () => {\n  const classes = useStyles()\n  const { addToast } = useToasts()\n  const history = useHistory()\n  const [displayFormStatus, setDisplayFormStatus] = useState(false)\n  const [formStatus, setFormStatus] = useState<IFormStatus>({\n    message: '',\n    type: '',\n  })\n  const dispatch = useDispatch()\n\n\n  // useNotAuth()\n  const onSubmit = async (values: ISignUpForm) => {\n    const dataLogin = {\n      email: values.email,\n    }\n    const res: any = await dispatch(asyncHandleLogin(dataLogin));\n\n    if (!res.ok) {\n      addToast(res.res, { appearance: 'error' })\n      return;\n    }\n    authService.setSession(res.res)\n\n    dispatch(actLoginSuccess(res.res))\n  }\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        initialValues={{\n          email: '',\n        }}\n        onSubmit={(values: ISignUpForm) => {\n          onSubmit(values)\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email()\n            .required('Enter valid email-id'),\n        })}\n      >\n        {(props: FormikProps<ISignUpForm>) => {\n          const {\n            values,\n            touched,\n            errors,\n            handleBlur,\n            handleChange,\n            isSubmitting,\n          } = props\n          return (\n            <Container component=\"main\" maxWidth=\"xs\">\n              <CssBaseline />\n              <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                  <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                  Sign in\n                </Typography>\n                <Form>\n                  <Grid\n                    container\n                    justify=\"space-around\"\n                    direction=\"row\"\n                  >\n                    <Grid\n                      item\n                      lg={10}\n                      md={10}\n                      sm={10}\n                      xs={10}\n                      className={classes.textField}\n                    >\n                      <TextField\n                        name=\"email\"\n                        id=\"email\"\n                        label=\"Email Login.\"\n                        value={values.email}\n                        type=\"text\"\n                        helperText={\n                          errors.email && touched.email\n                            ? errors.email\n                            : 'Enter your email...'\n                        }\n                        error={\n                          errors.email && touched.email\n                            ? true\n                            : false\n                        }\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      lg={10}\n                      md={10}\n                      sm={10}\n                      xs={10}\n                      className={classes.submitButton}\n                    >\n                      <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"secondary\"\n                      >\n                        Submit\n                      </Button>\n                      {displayFormStatus && (\n                        <div className=\"formStatus\">\n                          {formStatus.type === 'error' ? (\n                            <p\n                              className={\n                                classes.errorMessage\n                              }\n                            >\n                              {formStatus.message}\n                            </p>\n                          ) : formStatus.type ===\n                            'success' ? (\n                            <p\n                              className={\n                                classes.successMessage\n                              }\n                            >\n                              {formStatus.message}\n                            </p>\n                          ) : null}\n                        </div>\n                      )}\n                    </Grid>\n                  </Grid>\n                  <Grid item\n                    className={\n                      classes.signup\n                    }>\n                    <Link to=\"/register\">\n                      {\"Don't have an account? Sign Up\"}\n                    </Link>\n                  </Grid>\n                </Form>\n              </div>\n            </Container>\n          )\n        }}\n      </Formik>\n    </div>\n  )\n}\n\nexport default Login","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/guards/GuestGuard/GuestGuard.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Register/Register.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/actions/trello.action.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Login/style.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Register/style.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/routes.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Header/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Dialog/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/NavBar/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/containers/Auth/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/containers/ErrorBoundary/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Header/Header.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/NavBar/NavBar.tsx",["311"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\n// material core\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\n\n// material icon\nimport MailIcon from '@material-ui/icons/Mail';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport FunctionsIcon from '@material-ui/icons/Functions';\n\n// styles\nimport useStyles from './style';\n\nfunction NavBar() {\n  const classes = useStyles();\n  const history = useHistory();\n  const { t: translate } = useTranslation();\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const _handleNavigate = (path: string) => () => {\n    history.push(path)\n  }\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        <ListItem button onClick={_handleNavigate('/home')}>\n          <ListItemIcon><InboxIcon /></ListItemIcon>\n          <ListItemText primary={translate('HOME')} />\n        </ListItem>\n        <ListItem button onClick={_handleNavigate('/foods')}>\n          <ListItemIcon><FastfoodIcon /></ListItemIcon>\n          <ListItemText primary={translate(\"FOODS\")} />\n        </ListItem>\n        <ListItem button onClick={_handleNavigate('/trello')}>\n          <ListItemIcon><FunctionsIcon /></ListItemIcon>\n          <ListItemText primary=\"Trello\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <nav className={classes.drawer} aria-label=\"mailbox folders\">\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n\n    </nav>\n  )\n}\n\nexport default NavBar\n","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Dialog/Dialog.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/containers/ErrorBoundary/ErrorBoundary.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Trello/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Header/style.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/FoodDetail/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Foods/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Home/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/NavBar/style.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Header/DarkMode.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/selectors/food.selector.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/FoodDetail/FoodDetail.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Foods/Foods.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Home/Home.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/apis/food.api.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/hooks/usePagination.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/ReCharts/BarChart.tsx",["312"],"import React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nconst data = [\n  {\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n  },\n  {\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n  },\n  {\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n  },\n  {\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n  },\n  {\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n  },\n  {\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n  },\n  {\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n  },\n];\n\nexport default class Example extends PureComponent {\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/30763kr7/';\n\n  render() {\n    return (\n      <BarChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"pv\" fill=\"#8884d8\" />\n        <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n      </BarChart>\n    );\n  }\n}\n","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Trello/Trello.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/PaginationBase/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Trello/TodoCreate.tsx",["313","314","315","316","317"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n// material core\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n// material icons\nimport Icon from '@material-ui/core/Icon';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n// actions\nimport * as trelloAction from 'actions/trello.action';\n\nimport TodoForm from './TodoForm';\n\ntype IProps = {\n  listId?: string;\n  isLists?: boolean;\n}\n\nfunction TodoCreate({ listId, isLists }: IProps) {\n  const dispatch = useDispatch();\n  const [openForm, setOpenForm] = useState<boolean>(false);\n  const [title, setTitle] = useState('');\n\n  function handleSubmit() {\n    if(title === '') return;\n\n    if(isLists) {\n      ///\n      dispatch(trelloAction.addList(title))\n      return;\n    }\n    \n    dispatch(trelloAction.addCard(listId, title))\n    setOpenForm(false)\n  }\n\n  return (\n    <div>\n      {openForm ? (\n        <TodoForm\n          text={title}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => setTitle(e.target.value)}\n          handleSubmit={handleSubmit}\n          handleCloseForm={() => setOpenForm(false)}\n        />\n      ) : (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          startIcon={<AddIcon />}\n          onClick={() => setOpenForm(true)}\n        >\n          Add Card\n        </Button>\n      )}\n    </div>\n  )\n}\n\nexport default TodoCreate\n","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Trello/TodoList.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Header/Language.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/Header/Account.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/containers/Auth/Auth.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/PaginationBase/PaginationBase.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/selectors/trello.selector.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Trello/TodoForm.tsx",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/features/Trello/TodoCard.tsx",["318"],"import { useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { useDispatch } from 'react-redux';\n\n// material core\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\n// material icons\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { memo } from 'react';\n\n// actions\nimport * as trelloAction from 'actions/trello.action';\n\n// components\nimport TodoForm from './TodoForm';\n\ntype IProps = {\n  index: number;\n  cardId:string;\n  title: string;\n  listId: string;\n}\n\nconst TodoCard = ({ index, cardId, title, listId }: IProps) => {\n  const dispatch = useDispatch();\n  const [isEditing, setIsEditing] = useState(false);\n  const [cardText, setCardText] = useState(title);\n\n  function onChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setCardText(e.target.value);\n  }\n\n  function handleSubmit() {\n    dispatch(trelloAction.changeTitleCard(cardId, cardText));\n    setIsEditing(false)\n  }\n\n  function renderCard() {\n    return (\n      <Card className=\"todoCard\">\n        <CardContent>\n          <Typography variant=\"body2\" component=\"div\">\n            {title}\n          </Typography>\n          <div className=\"todoCard__button\">\n            <Tooltip title=\"Edit\">\n              <IconButton color=\"inherit\" component=\"span\" size=\"small\">\n                <EditIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Delete\">\n              <IconButton color=\"inherit\" component=\"span\" size=\"small\">\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  function renderTextArea() {\n    return (\n      <TodoForm\n        text={cardText}\n        onChange={onChange}\n        handleSubmit={handleSubmit}\n        handleCloseForm={() => setIsEditing(false)}\n      />\n    )\n  }\n\n  return (\n    <Draggable draggableId={String(cardId)} index={index}>\n      {(provided) => {\n        return (\n          <div\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            className=\"todoCard__container\"\n            onDoubleClick={() => setIsEditing(true)}\n          >\n            {isEditing ? renderTextArea() : renderCard()}\n          </div>\n        );\n      }}\n    </Draggable>\n  )\n}\n\nexport default memo(TodoCard)","/Users/khanhnguyen/Desktop/FrontEnd-Test/src/components/PaginationBase/styles.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/selectors/user.selector.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/configs/index.ts",[],"/Users/khanhnguyen/Desktop/FrontEnd-Test/src/apis/user.api.ts",[],{"ruleId":"319","replacedBy":"320"},{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","severity":1,"message":"324","line":4,"column":25,"nodeType":"325","messageId":"326","endLine":4,"endColumn":37},{"ruleId":"323","severity":1,"message":"327","line":5,"column":10,"nodeType":"325","messageId":"326","endLine":5,"endColumn":22},{"ruleId":"323","severity":1,"message":"328","line":43,"column":7,"nodeType":"325","messageId":"326","endLine":43,"endColumn":40},{"ruleId":"323","severity":1,"message":"329","line":60,"column":9,"nodeType":"325","messageId":"326","endLine":60,"endColumn":16},{"ruleId":"323","severity":1,"message":"330","line":61,"column":29,"nodeType":"325","messageId":"326","endLine":61,"endColumn":49},{"ruleId":"323","severity":1,"message":"331","line":62,"column":22,"nodeType":"325","messageId":"326","endLine":62,"endColumn":35},{"ruleId":"323","severity":1,"message":"332","line":107,"column":13,"nodeType":"325","messageId":"326","endLine":107,"endColumn":25},{"ruleId":"323","severity":1,"message":"333","line":16,"column":8,"nodeType":"325","messageId":"326","endLine":16,"endColumn":16},{"ruleId":"323","severity":1,"message":"334","line":3,"column":18,"nodeType":"325","messageId":"326","endLine":3,"endColumn":22},{"ruleId":"323","severity":1,"message":"335","line":5,"column":8,"nodeType":"325","messageId":"326","endLine":5,"endColumn":18},{"ruleId":"323","severity":1,"message":"336","line":6,"column":8,"nodeType":"325","messageId":"326","endLine":6,"endColumn":15},{"ruleId":"323","severity":1,"message":"337","line":7,"column":8,"nodeType":"325","messageId":"326","endLine":7,"endColumn":17},{"ruleId":"323","severity":1,"message":"338","line":11,"column":8,"nodeType":"325","messageId":"326","endLine":11,"endColumn":12},{"ruleId":"323","severity":1,"message":"339","line":13,"column":8,"nodeType":"325","messageId":"326","endLine":13,"endColumn":18},{"ruleId":"323","severity":1,"message":"337","line":11,"column":8,"nodeType":"325","messageId":"326","endLine":11,"endColumn":17},"no-native-reassign",["340"],"no-negated-in-lhs",["341"],"@typescript-eslint/no-unused-vars","'actSetDialog' is defined but never used.","Identifier","unusedVar","'IPaginaition' is defined but never used.","'formStatusProps' is assigned a value but never used.","'history' is assigned a value but never used.","'setDisplayFormStatus' is assigned a value but never used.","'setFormStatus' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'MailIcon' is defined but never used.","'Cell' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'TextField' is defined but never used.","'Icon' is defined but never used.","'DeleteIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]